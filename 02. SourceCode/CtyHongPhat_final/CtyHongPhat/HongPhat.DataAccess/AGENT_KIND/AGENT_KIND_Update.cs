//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith.
//
//     Date:    1/13/2010
//     Time:    10:18 PM
//     Version: 5.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Data.SqlTypes;
using System.Data.SqlClient;

namespace HongPhat.DataAccess
{
	#region AGENT_KIND_Update Wrapper
    /// <summary>
    /// This class is a wrapper for the AGENT_KIND_Update stored procedure.
    /// </summary>
    public class AGENT_KIND_Update
    {
		#region Member Variables
		protected string _connectionString = String.Empty;
		protected int _recordsAffected = -1;
		protected int _returnValue = 0;
		protected SqlInt32 _idAgentKind = SqlInt32.Null;
		protected bool _idAgentKindSet = false;
		protected SqlString _agentKindName = SqlString.Null;
		protected bool _agentKindNameSet = false;
		protected SqlString _createdBy = SqlString.Null;
		protected bool _createdBySet = false;
		protected SqlDateTime _cratedDate = SqlDateTime.Null;
		protected bool _cratedDateSet = false;
		protected SqlString _modifiedBy = SqlString.Null;
		protected bool _modifiedBySet = false;
		protected SqlDateTime _modifiedDate = SqlDateTime.Null;
		protected bool _modifiedDateSet = false;
		protected SqlInt32 _deleted = SqlInt32.Null;
		protected bool _deletedSet = false;
		#endregion
		
		#region Constructors
		public AGENT_KIND_Update()
		{
		}
		
		public AGENT_KIND_Update(string connectionString)
		{
			this.ConnectionString = connectionString;
		}
		#endregion
		
		#region Public Properties
		/// <summary>
		/// The connection string to use when executing the AGENT_KIND_Update stored procedure.
		/// </summary>
		public string ConnectionString
		{
			get {return _connectionString;}
			set {_connectionString = value;}
		}
		
		/// <summary>
		/// Gets the return value from the AGENT_KIND_Update stored procedure.
		/// </summary>
		public int ReturnValue
		{
			get {return _returnValue;}
		}
		
		/// <summary>
		/// Gets the number of rows changed, inserted, or deleted by execution of the AGENT_KIND_Update stored procedure.
		/// </summary>
		public int RecordsAffected
		{
			get {return _recordsAffected;}
		}
		
		/// <summary>
		/// 
		/// </summary>
		public SqlInt32 IdAgentKind
		{
			get {return _idAgentKind;}
			set
			{
				_idAgentKind = value;
				_idAgentKindSet = true;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public SqlString AgentKindName
		{
			get {return _agentKindName;}
			set
			{
				_agentKindName = value;
				_agentKindNameSet = true;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public SqlString CreatedBy
		{
			get {return _createdBy;}
			set
			{
				_createdBy = value;
				_createdBySet = true;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public SqlDateTime CratedDate
		{
			get {return _cratedDate;}
			set
			{
				_cratedDate = value;
				_cratedDateSet = true;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public SqlString ModifiedBy
		{
			get {return _modifiedBy;}
			set
			{
				_modifiedBy = value;
				_modifiedBySet = true;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public SqlDateTime ModifiedDate
		{
			get {return _modifiedDate;}
			set
			{
				_modifiedDate = value;
				_modifiedDateSet = true;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public SqlInt32 Deleted
		{
			get {return _deleted;}
			set
			{
				_deleted = value;
				_deletedSet = true;
			}
		}
		#endregion
		
		#region Execute Methods
		/// <summary>
		/// This method calls the AGENT_KIND_Update stored procedure.
		/// </summary>
		public virtual void Execute()
		{
			SqlCommand cmd = new SqlCommand();
			
			System.Diagnostics.Debug.Assert(this.ConnectionString.Length != 0, "You must first set the ConnectionString property before calling this method.");
			SqlConnection cn = new SqlConnection(this.ConnectionString);
			
			try
			{
				cmd.Connection = cn;
				cmd.CommandText = "[dbo].[AGENT_KIND_Update]";
				cmd.CommandType = CommandType.StoredProcedure;
				
				#region Populate Parameters
				SqlParameter prmReturnValue = cmd.Parameters.Add("@RETURN_VALUE", SqlDbType.Int);
				prmReturnValue.Direction = ParameterDirection.ReturnValue;
				
				SqlParameter prmIdAgentKind = cmd.Parameters.Add("@IdAgentKind", SqlDbType.Int);
				prmIdAgentKind.Direction = ParameterDirection.Input;
				if (_idAgentKindSet == true || this.IdAgentKind.IsNull == false)
				{
					prmIdAgentKind.Value = this.IdAgentKind;
				}
				
				SqlParameter prmAgentKindName = cmd.Parameters.Add("@AgentKindName", SqlDbType.NVarChar);
				prmAgentKindName.Direction = ParameterDirection.Input;
					prmAgentKindName.Size = 250;
				if (_agentKindNameSet == true || this.AgentKindName.IsNull == false)
				{
					prmAgentKindName.Value = this.AgentKindName;
				}
				
				SqlParameter prmCreatedBy = cmd.Parameters.Add("@CreatedBy", SqlDbType.NVarChar);
				prmCreatedBy.Direction = ParameterDirection.Input;
					prmCreatedBy.Size = 250;
				if (_createdBySet == true || this.CreatedBy.IsNull == false)
				{
					prmCreatedBy.Value = this.CreatedBy;
				}
				
				SqlParameter prmCratedDate = cmd.Parameters.Add("@CratedDate", SqlDbType.DateTime);
				prmCratedDate.Direction = ParameterDirection.Input;
				if (_cratedDateSet == true || this.CratedDate.IsNull == false)
				{
					prmCratedDate.Value = this.CratedDate;
				}
				
				SqlParameter prmModifiedBy = cmd.Parameters.Add("@ModifiedBy", SqlDbType.NVarChar);
				prmModifiedBy.Direction = ParameterDirection.Input;
					prmModifiedBy.Size = 250;
				if (_modifiedBySet == true || this.ModifiedBy.IsNull == false)
				{
					prmModifiedBy.Value = this.ModifiedBy;
				}
				
				SqlParameter prmModifiedDate = cmd.Parameters.Add("@ModifiedDate", SqlDbType.DateTime);
				prmModifiedDate.Direction = ParameterDirection.Input;
				if (_modifiedDateSet == true || this.ModifiedDate.IsNull == false)
				{
					prmModifiedDate.Value = this.ModifiedDate;
				}
				
				SqlParameter prmDeleted = cmd.Parameters.Add("@Deleted", SqlDbType.Int);
				prmDeleted.Direction = ParameterDirection.Input;
				if (_deletedSet == true || this.Deleted.IsNull == false)
				{
					prmDeleted.Value = this.Deleted;
				}
				#endregion
				
				#region Execute Command
				cn.Open();
				_recordsAffected = cmd.ExecuteNonQuery();
				#endregion
				
				#region Get Output Parameters
				if (prmReturnValue.Value != null && prmReturnValue.Value != DBNull.Value)
				{
					_returnValue = (int)prmReturnValue.Value;
				}
				
				#endregion
			}
			finally
			{
				if (cn.State == ConnectionState.Open)
				{
					cn.Close();
				}
				
				cn.Dispose();
				cmd.Dispose();
			}
		}
		
		/// <summary>
		/// This method calls the AGENT_KIND_Update stored procedure.
		/// </summary>
		/// <param name="connectionString">The connection string to use</param>
		/// <param name="idAgentKind"></param>
		/// <param name="agentKindName"></param>
		/// <param name="createdBy"></param>
		/// <param name="cratedDate"></param>
		/// <param name="modifiedBy"></param>
		/// <param name="modifiedDate"></param>
		/// <param name="deleted"></param>
		public static void Execute(
				#region Parameters
				string connectionString,
				SqlInt32 idAgentKind,
				SqlString agentKindName,
				SqlString createdBy,
				SqlDateTime cratedDate,
				SqlString modifiedBy,
				SqlDateTime modifiedDate,
				SqlInt32 deleted
				#endregion
		    )
		{
			AGENT_KIND_Update aGENT_KIND_Update = new AGENT_KIND_Update();
			
			#region Assign Property Values
			aGENT_KIND_Update.ConnectionString = connectionString;
			aGENT_KIND_Update.IdAgentKind = idAgentKind;
			aGENT_KIND_Update.AgentKindName = agentKindName;
			aGENT_KIND_Update.CreatedBy = createdBy;
			aGENT_KIND_Update.CratedDate = cratedDate;
			aGENT_KIND_Update.ModifiedBy = modifiedBy;
			aGENT_KIND_Update.ModifiedDate = modifiedDate;
			aGENT_KIND_Update.Deleted = deleted;
			#endregion
			
			aGENT_KIND_Update.Execute();
			
			#region Get Property Values
			
			#endregion
		}
		#endregion
	}
	#endregion
}
