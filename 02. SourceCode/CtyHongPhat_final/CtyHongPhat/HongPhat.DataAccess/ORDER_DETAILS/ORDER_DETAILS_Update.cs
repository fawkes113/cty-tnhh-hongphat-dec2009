//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith.
//
//     Date:    1/13/2010
//     Time:    10:18 PM
//     Version: 5.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Data.SqlTypes;
using System.Data.SqlClient;

namespace HongPhat.DataAccess
{
	#region ORDER_DETAILS_Update Wrapper
    /// <summary>
    /// This class is a wrapper for the ORDER_DETAILS_Update stored procedure.
    /// </summary>
    public class ORDER_DETAILS_Update
    {
		#region Member Variables
		protected string _connectionString = String.Empty;
		protected int _recordsAffected = -1;
		protected int _returnValue = 0;
		protected SqlInt32 _orderDetailId = SqlInt32.Null;
		protected bool _orderDetailIdSet = false;
		protected SqlInt32 _orderId = SqlInt32.Null;
		protected bool _orderIdSet = false;
		protected SqlInt32 _itemId = SqlInt32.Null;
		protected bool _itemIdSet = false;
		protected SqlDecimal _quantity = SqlDecimal.Null;
		protected bool _quantitySet = false;
		protected SqlInt32 _idPrice = SqlInt32.Null;
		protected bool _idPriceSet = false;
		protected SqlString _createBy = SqlString.Null;
		protected bool _createBySet = false;
		protected SqlDateTime _createDate = SqlDateTime.Null;
		protected bool _createDateSet = false;
		protected SqlString _modifiedBy = SqlString.Null;
		protected bool _modifiedBySet = false;
		protected SqlDateTime _modifiedDate = SqlDateTime.Null;
		protected bool _modifiedDateSet = false;
		protected SqlInt32 _deleted = SqlInt32.Null;
		protected bool _deletedSet = false;
		protected SqlString _note = SqlString.Null;
		protected bool _noteSet = false;
		#endregion
		
		#region Constructors
		public ORDER_DETAILS_Update()
		{
		}
		
		public ORDER_DETAILS_Update(string connectionString)
		{
			this.ConnectionString = connectionString;
		}
		#endregion
		
		#region Public Properties
		/// <summary>
		/// The connection string to use when executing the ORDER_DETAILS_Update stored procedure.
		/// </summary>
		public string ConnectionString
		{
			get {return _connectionString;}
			set {_connectionString = value;}
		}
		
		/// <summary>
		/// Gets the return value from the ORDER_DETAILS_Update stored procedure.
		/// </summary>
		public int ReturnValue
		{
			get {return _returnValue;}
		}
		
		/// <summary>
		/// Gets the number of rows changed, inserted, or deleted by execution of the ORDER_DETAILS_Update stored procedure.
		/// </summary>
		public int RecordsAffected
		{
			get {return _recordsAffected;}
		}
		
		/// <summary>
		/// 
		/// </summary>
		public SqlInt32 OrderDetailId
		{
			get {return _orderDetailId;}
			set
			{
				_orderDetailId = value;
				_orderDetailIdSet = true;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public SqlInt32 OrderId
		{
			get {return _orderId;}
			set
			{
				_orderId = value;
				_orderIdSet = true;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public SqlInt32 ItemId
		{
			get {return _itemId;}
			set
			{
				_itemId = value;
				_itemIdSet = true;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public SqlDecimal Quantity
		{
			get {return _quantity;}
			set
			{
				_quantity = value;
				_quantitySet = true;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public SqlInt32 IdPrice
		{
			get {return _idPrice;}
			set
			{
				_idPrice = value;
				_idPriceSet = true;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public SqlString CreateBy
		{
			get {return _createBy;}
			set
			{
				_createBy = value;
				_createBySet = true;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public SqlDateTime CreateDate
		{
			get {return _createDate;}
			set
			{
				_createDate = value;
				_createDateSet = true;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public SqlString ModifiedBy
		{
			get {return _modifiedBy;}
			set
			{
				_modifiedBy = value;
				_modifiedBySet = true;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public SqlDateTime ModifiedDate
		{
			get {return _modifiedDate;}
			set
			{
				_modifiedDate = value;
				_modifiedDateSet = true;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public SqlInt32 Deleted
		{
			get {return _deleted;}
			set
			{
				_deleted = value;
				_deletedSet = true;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		public SqlString Note
		{
			get {return _note;}
			set
			{
				_note = value;
				_noteSet = true;
			}
		}
		#endregion
		
		#region Execute Methods
		/// <summary>
		/// This method calls the ORDER_DETAILS_Update stored procedure.
		/// </summary>
		public virtual void Execute()
		{
			SqlCommand cmd = new SqlCommand();
			
			System.Diagnostics.Debug.Assert(this.ConnectionString.Length != 0, "You must first set the ConnectionString property before calling this method.");
			SqlConnection cn = new SqlConnection(this.ConnectionString);
			
			try
			{
				cmd.Connection = cn;
				cmd.CommandText = "[dbo].[ORDER_DETAILS_Update]";
				cmd.CommandType = CommandType.StoredProcedure;
				
				#region Populate Parameters
				SqlParameter prmReturnValue = cmd.Parameters.Add("@RETURN_VALUE", SqlDbType.Int);
				prmReturnValue.Direction = ParameterDirection.ReturnValue;
				
				SqlParameter prmOrderDetailId = cmd.Parameters.Add("@OrderDetailId", SqlDbType.Int);
				prmOrderDetailId.Direction = ParameterDirection.Input;
				if (_orderDetailIdSet == true || this.OrderDetailId.IsNull == false)
				{
					prmOrderDetailId.Value = this.OrderDetailId;
				}
				
				SqlParameter prmOrderId = cmd.Parameters.Add("@OrderId", SqlDbType.Int);
				prmOrderId.Direction = ParameterDirection.Input;
				if (_orderIdSet == true || this.OrderId.IsNull == false)
				{
					prmOrderId.Value = this.OrderId;
				}
				
				SqlParameter prmItemId = cmd.Parameters.Add("@ItemId", SqlDbType.Int);
				prmItemId.Direction = ParameterDirection.Input;
				if (_itemIdSet == true || this.ItemId.IsNull == false)
				{
					prmItemId.Value = this.ItemId;
				}
				
				SqlParameter prmQuantity = cmd.Parameters.Add("@Quantity", SqlDbType.Decimal);
				prmQuantity.Direction = ParameterDirection.Input;
					prmQuantity.Precision = 18;
					prmQuantity.Scale = 0;
				if (_quantitySet == true || this.Quantity.IsNull == false)
				{
					prmQuantity.Value = this.Quantity;
				}
				
				SqlParameter prmIdPrice = cmd.Parameters.Add("@IdPrice", SqlDbType.Int);
				prmIdPrice.Direction = ParameterDirection.Input;
				if (_idPriceSet == true || this.IdPrice.IsNull == false)
				{
					prmIdPrice.Value = this.IdPrice;
				}
				
				SqlParameter prmCreateBy = cmd.Parameters.Add("@CreateBy", SqlDbType.NVarChar);
				prmCreateBy.Direction = ParameterDirection.Input;
					prmCreateBy.Size = 250;
				if (_createBySet == true || this.CreateBy.IsNull == false)
				{
					prmCreateBy.Value = this.CreateBy;
				}
				
				SqlParameter prmCreateDate = cmd.Parameters.Add("@CreateDate", SqlDbType.DateTime);
				prmCreateDate.Direction = ParameterDirection.Input;
				if (_createDateSet == true || this.CreateDate.IsNull == false)
				{
					prmCreateDate.Value = this.CreateDate;
				}
				
				SqlParameter prmModifiedBy = cmd.Parameters.Add("@ModifiedBy", SqlDbType.NVarChar);
				prmModifiedBy.Direction = ParameterDirection.Input;
					prmModifiedBy.Size = 250;
				if (_modifiedBySet == true || this.ModifiedBy.IsNull == false)
				{
					prmModifiedBy.Value = this.ModifiedBy;
				}
				
				SqlParameter prmModifiedDate = cmd.Parameters.Add("@ModifiedDate", SqlDbType.DateTime);
				prmModifiedDate.Direction = ParameterDirection.Input;
				if (_modifiedDateSet == true || this.ModifiedDate.IsNull == false)
				{
					prmModifiedDate.Value = this.ModifiedDate;
				}
				
				SqlParameter prmDeleted = cmd.Parameters.Add("@Deleted", SqlDbType.Int);
				prmDeleted.Direction = ParameterDirection.Input;
				if (_deletedSet == true || this.Deleted.IsNull == false)
				{
					prmDeleted.Value = this.Deleted;
				}
				
				SqlParameter prmNote = cmd.Parameters.Add("@Note", SqlDbType.Text);
				prmNote.Direction = ParameterDirection.Input;
					prmNote.Size = 16;
				if (_noteSet == true || this.Note.IsNull == false)
				{
					prmNote.Value = this.Note;
				}
				#endregion
				
				#region Execute Command
				cn.Open();
				_recordsAffected = cmd.ExecuteNonQuery();
				#endregion
				
				#region Get Output Parameters
				if (prmReturnValue.Value != null && prmReturnValue.Value != DBNull.Value)
				{
					_returnValue = (int)prmReturnValue.Value;
				}
				
				#endregion
			}
			finally
			{
				if (cn.State == ConnectionState.Open)
				{
					cn.Close();
				}
				
				cn.Dispose();
				cmd.Dispose();
			}
		}
		
		/// <summary>
		/// This method calls the ORDER_DETAILS_Update stored procedure.
		/// </summary>
		/// <param name="connectionString">The connection string to use</param>
		/// <param name="orderDetailId"></param>
		/// <param name="orderId"></param>
		/// <param name="itemId"></param>
		/// <param name="quantity"></param>
		/// <param name="idPrice"></param>
		/// <param name="createBy"></param>
		/// <param name="createDate"></param>
		/// <param name="modifiedBy"></param>
		/// <param name="modifiedDate"></param>
		/// <param name="deleted"></param>
		/// <param name="note"></param>
		public static void Execute(
				#region Parameters
				string connectionString,
				SqlInt32 orderDetailId,
				SqlInt32 orderId,
				SqlInt32 itemId,
				SqlDecimal quantity,
				SqlInt32 idPrice,
				SqlString createBy,
				SqlDateTime createDate,
				SqlString modifiedBy,
				SqlDateTime modifiedDate,
				SqlInt32 deleted,
				SqlString note
				#endregion
		    )
		{
			ORDER_DETAILS_Update oRDER_DETAILS_Update = new ORDER_DETAILS_Update();
			
			#region Assign Property Values
			oRDER_DETAILS_Update.ConnectionString = connectionString;
			oRDER_DETAILS_Update.OrderDetailId = orderDetailId;
			oRDER_DETAILS_Update.OrderId = orderId;
			oRDER_DETAILS_Update.ItemId = itemId;
			oRDER_DETAILS_Update.Quantity = quantity;
			oRDER_DETAILS_Update.IdPrice = idPrice;
			oRDER_DETAILS_Update.CreateBy = createBy;
			oRDER_DETAILS_Update.CreateDate = createDate;
			oRDER_DETAILS_Update.ModifiedBy = modifiedBy;
			oRDER_DETAILS_Update.ModifiedDate = modifiedDate;
			oRDER_DETAILS_Update.Deleted = deleted;
			oRDER_DETAILS_Update.Note = note;
			#endregion
			
			oRDER_DETAILS_Update.Execute();
			
			#region Get Property Values
			
			#endregion
		}
		#endregion
	}
	#endregion
}
